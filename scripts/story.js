/**
 * Hist√≥ria Interativa - Script principal
 * Implementa√ß√£o em JavaScript puro para crian√ßas autistas
 * Foco em acessibilidade, feedback claro e experi√™ncia previs√≠vel
 */

// Configura√ß√£o do jogo
const storyConfig = {
  // Sons ativados por padr√£o
  soundEnabled: true,
  // Hist√≥ria atual
  currentStory: null,
  // P√°gina atual
  currentPage: 0,
  // Caminho escolhido
  chosenPath: [],
  // Escolha atual
  currentChoice: null,
  // Dados das hist√≥rias
  stories: {
    // Hist√≥ria: Um Dia na Escola
    school: {
      title: "Um Dia na Escola",
      totalPages: 8,
      pages: [
        {
          text: "Miguel est√° indo para seu primeiro dia em uma escola nova. Ele est√° um pouco nervoso porque n√£o conhece ningu√©m.",
          image: "school_1.jpg",
          imageAlt: "Miguel em frente √† escola nova, parecendo nervoso",
          emotion: {
            icon: "üòü",
            text: "Miguel est√° nervoso"
          },
          choices: [
            {
              text: "Miguel pode respirar fundo e entrar na escola",
              nextPage: 1
            },
            {
              text: "Miguel pode pedir para sua m√£e entrar com ele",
              nextPage: 2
            }
          ]
        },
        {
          text: "Miguel respira fundo e entra na escola sozinho. A professora Ana o recebe com um sorriso e o apresenta para a turma.",
          image: "school_2a.jpg",
          imageAlt: "Professora Ana apresentando Miguel para a turma",
          emotion: {
            icon: "üòä",
            text: "Miguel est√° mais calmo"
          },
          choices: [
            {
              text: "Miguel pode se sentar perto de um colega que sorriu para ele",
              nextPage: 3
            },
            {
              text: "Miguel pode se sentar em uma carteira vazia no fundo da sala",
              nextPage: 4
            }
          ]
        },
        {
          text: "Miguel pede para sua m√£e entrar com ele. Ela o acompanha at√© a sala de aula e conversa com a professora Ana.",
          image: "school_2b.jpg",
          imageAlt: "M√£e de Miguel conversando com a professora Ana",
          emotion: {
            icon: "üòå",
            text: "Miguel est√° se sentindo seguro"
          },
          choices: [
            {
              text: "Miguel pode agradecer sua m√£e e se despedir",
              nextPage: 3
            },
            {
              text: "Miguel pode pedir para sua m√£e ficar mais um pouco",
              nextPage: 5
            }
          ]
        },
        {
          text: "Miguel se senta perto de um menino chamado Pedro, que sorriu para ele. Pedro pergunta se Miguel gosta de dinossauros.",
          image: "school_3a.jpg",
          imageAlt: "Miguel sentado ao lado de Pedro, que est√° mostrando um livro de dinossauros",
          emotion: {
            icon: "üòÉ",
            text: "Miguel est√° animado"
          },
          choices: [
            {
              text: "Miguel pode dizer que adora dinossauros",
              nextPage: 6
            },
            {
              text: "Miguel pode dizer que prefere carros",
              nextPage: 7
            }
          ]
        },
        {
          text: "Miguel se senta em uma carteira vazia no fundo da sala. Ele observa os outros alunos conversando entre si.",
          image: "school_3b.jpg",
          imageAlt: "Miguel sentado sozinho no fundo da sala, observando os colegas",
          emotion: {
            icon: "ü§î",
            text: "Miguel est√° pensativo"
          },
          choices: [
            {
              text: "Miguel pode desenhar enquanto espera a aula come√ßar",
              nextPage: 8
            },
            {
              text: "Miguel pode se aproximar de um grupo de crian√ßas",
              nextPage: 7
            }
          ]
        },
        {
          text: "A m√£e de Miguel fica mais um pouco, mas explica que precisa ir trabalhar. Ela promete voltar para busc√°-lo no final da aula.",
          image: "school_3c.jpg",
          imageAlt: "M√£e de Miguel se despedindo dele na porta da sala",
          emotion: {
            icon: "üòï",
            text: "Miguel est√° um pouco triste"
          },
          choices: [
            {
              text: "Miguel pode acenar para sua m√£e e voltar para a sala",
              nextPage: 3
            },
            {
              text: "Miguel pode pedir para a professora ficar perto dele",
              nextPage: 8
            }
          ]
        },
        {
          text: "Miguel e Pedro descobrem que ambos adoram dinossauros! Eles passam o intervalo conversando sobre seus dinossauros favoritos.",
          image: "school_4a.jpg",
          imageAlt: "Miguel e Pedro brincando juntos com dinossauros de brinquedo",
          emotion: {
            icon: "üòÑ",
            text: "Miguel est√° feliz"
          },
          ending: {
            text: "Miguel fez um novo amigo em seu primeiro dia de aula! Ele descobriu que compartilhar interesses √© uma √≥tima maneira de fazer amizades.",
            positive: true
          }
        },
        {
          text: "Miguel diz que prefere carros. Pedro mostra que tamb√©m tem alguns carrinhos na mochila e convida Miguel para brincar no intervalo.",
          image: "school_4b.jpg",
          imageAlt: "Miguel e Pedro brincando com carrinhos no p√°tio da escola",
          emotion: {
            icon: "üòÑ",
            text: "Miguel est√° feliz"
          },
          ending: {
            text: "Miguel fez um novo amigo em seu primeiro dia de aula! Ele aprendeu que mesmo com interesses diferentes, as pessoas podem encontrar coisas em comum.",
            positive: true
          }
        },
        {
          text: "A professora Ana nota que Miguel est√° sozinho e o convida para uma atividade em grupo. Ela o apresenta a alguns colegas que o recebem bem.",
          image: "school_4c.jpg",
          imageAlt: "Professora Ana apresentando Miguel a um grupo de crian√ßas em uma atividade",
          emotion: {
            icon: "üôÇ",
            text: "Miguel est√° se sentindo melhor"
          },
          ending: {
            text: "Com a ajuda da professora, Miguel come√ßou a se enturmar. Ele aprendeu que √†s vezes precisamos de um pouco de ajuda para fazer novos amigos, e isso √© normal.",
            positive: true
          }
        }
      ]
    },
    
    // Hist√≥ria: Aventura no Parque
    park: {
      title: "Aventura no Parque",
      totalPages: 8,
      pages: [
        {
          text: "Ana est√° no parque com sua fam√≠lia. Ela v√™ um escorregador muito legal, mas h√° outras crian√ßas esperando para brincar.",
          image: "park_1.jpg",
          imageAlt: "Ana olhando para um escorregador com crian√ßas esperando na fila",
          emotion: {
            icon: "üò≤",
            text: "Ana est√° ansiosa para brincar"
          },
          choices: [
            {
              text: "Ana pode esperar sua vez na fila",
              nextPage: 1
            },
            {
              text: "Ana pode tentar passar na frente das outras crian√ßas",
              nextPage: 2
            }
          ]
        },
        {
          text: "Ana espera pacientemente na fila. Enquanto espera, ela observa como as outras crian√ßas escorregam e fica ainda mais animada.",
          image: "park_2a.jpg",
          imageAlt: "Ana esperando na fila do escorregador, observando as outras crian√ßas",
          emotion: {
            icon: "üòä",
            text: "Ana est√° aprendendo a ter paci√™ncia"
          },
          choices: [
            {
              text: "Ana pode conversar com a crian√ßa ao lado dela na fila",
              nextPage: 3
            },
            {
              text: "Ana pode continuar esperando quietinha",
              nextPage: 4
            }
          ]
        },
        {
          text: "Ana tenta passar na frente das outras crian√ßas. Um menino diz: 'Ei, voc√™ precisa esperar sua vez como todo mundo!'",
          image: "park_2b.jpg",
          imageAlt: "Um menino falando com Ana, que parece surpresa",
          emotion: {
            icon: "üò≥",
            text: "Ana est√° envergonhada"
          },
          choices: [
            {
              text: "Ana pode pedir desculpas e ir para o final da fila",
              nextPage: 5
            },
            {
              text: "Ana pode ficar chateada e sair do escorregador",
              nextPage: 6
            }
          ]
        },
        {
          text: "Ana sorri para a menina ao lado dela e pergunta: 'Voc√™ vem sempre neste parque?' Elas come√ßam a conversar sobre seus brinquedos favoritos.",
          image: "park_3a.jpg",
          imageAlt: "Ana conversando com uma menina na fila do escorregador",
          emotion: {
            icon: "üòÑ",
            text: "Ana est√° feliz por fazer uma nova amiga"
          },
          choices: [
            {
              text: "Ana pode convidar a menina para brincar juntas depois",
              nextPage: 7
            },
            {
              text: "Ana pode se despedir quando chegar sua vez de escorregar",
              nextPage: 8
            }
          ]
        },
        {
          text: "Ana espera quietinha. Logo chega sua vez e ela escorrega, sentindo o vento em seu rosto. √â muito divertido!",
          image: "park_3b.jpg",
          imageAlt: "Ana escorregando com um grande sorriso no rosto",
          emotion: {
            icon: "ü§©",
            text: "Ana est√° muito feliz"
          },
          ending: {
            text: "Ana aprendeu que esperar sua vez vale a pena! Ela se divertiu muito no escorregador e sentiu-se orgulhosa por ter sido paciente.",
            positive: true
          }
        },
        {
          text: "Ana pede desculpas e vai para o final da fila. As outras crian√ßas aceitam suas desculpas e uma delas at√© sorri para ela.",
          image: "park_3c.jpg",
          imageAlt: "Ana no final da fila, com uma crian√ßa sorrindo para ela",
          emotion: {
            icon: "üòå",
            text: "Ana est√° aliviada"
          },
          choices: [
            {
              text: "Ana pode sorrir de volta e esperar sua vez",
              nextPage: 4
            },
            {
              text: "Ana pode perguntar o nome da crian√ßa que sorriu para ela",
              nextPage: 3
            }
          ]
        },
        {
          text: "Ana fica chateada e sai do escorregador. Ela se senta em um banco, sozinha e triste.",
          image: "park_3d.jpg",
          imageAlt: "Ana sentada sozinha em um banco, parecendo triste",
          emotion: {
            icon: "üò¢",
            text: "Ana est√° triste"
          },
          choices: [
            {
              text: "A m√£e de Ana pode conversar com ela sobre esperar a vez",
              nextPage: 5
            },
            {
              text: "Ana pode encontrar outro brinquedo sem fila",
              nextPage: 8
            }
          ]
        },
        {
          text: "Ana e sua nova amiga, J√∫lia, escorregam juntas v√°rias vezes. Depois, elas v√£o brincar no balan√ßo e na caixa de areia.",
          image: "park_4a.jpg",
          imageAlt: "Ana e J√∫lia brincando juntas em diferentes brinquedos do parque",
          emotion: {
            icon: "üòÑ",
            text: "Ana est√° muito feliz com sua nova amiga"
          },
          ending: {
            text: "Ana n√£o s√≥ aprendeu a esperar sua vez, como tamb√©m fez uma nova amiga! Ela descobriu que conversar com outras crian√ßas pode ser o in√≠cio de uma amizade divertida.",
            positive: true
          }
        },
        {
          text: "Ana se despede da menina quando chega sua vez. Depois de escorregar, ela encontra outros brinquedos divertidos no parque.",
          image: "park_4b.jpg",
          imageAlt: "Ana explorando diferentes brinquedos no parque",
          emotion: {
            icon: "üòä",
            text: "Ana est√° contente explorando o parque"
          },
          ending: {
            text: "Ana aprendeu a esperar sua vez e a ser educada com outras crian√ßas. Ela se divertiu muito explorando todos os brinquedos do parque!",
            positive: true
          }
        }
      ]
    },
    
    // Hist√≥ria: Festa de Anivers√°rio
    birthday: {
      title: "Festa de Anivers√°rio",
      totalPages: 8,
      pages: [
        {
          text: "Lucas foi convidado para a festa de anivers√°rio de seu colega Mateus. Quando chega √† festa, v√™ muitas crian√ßas, luzes coloridas e m√∫sica alta.",
          image: "birthday_1.jpg",
          imageAlt: "Lucas na entrada da festa, olhando para as luzes e crian√ßas",
          emotion: {
            icon: "üò®",
            text: "Lucas est√° sobrecarregado"
          },
          choices: [
            {
              text: "Lucas pode pedir para seu pai ficar com ele por um tempo",
              nextPage: 1
            },
            {
              text: "Lucas pode procurar um lugar mais quieto na festa",
              nextPage: 2
            }
          ]
        },
        {
          text: "O pai de Lucas fica com ele por um tempo. Juntos, eles observam a festa de longe, enquanto Lucas se acostuma com o ambiente.",
          image: "birthday_2a.jpg",
          imageAlt: "Lucas e seu pai observando a festa de um canto mais tranquilo",
          emotion: {
            icon: "üòå",
            text: "Lucas est√° se sentindo mais seguro"
          },
          choices: [
            {
              text: "Lucas pode pedir para seu pai lev√°-lo at√© Mateus para entregar o presente",
              nextPage: 3
            },
            {
              text: "Lucas pode ficar mais um pouco com seu pai at√© se sentir pronto",
              nextPage: 4
            }
          ]
        },
        {
          text: "Lucas encontra um canto mais quieto da casa, longe da m√∫sica alta. Ele respira fundo e observa as outras crian√ßas brincando.",
          image: "birthday_2b.jpg",
          imageAlt: "Lucas em um canto mais quieto, observando as outras crian√ßas",
          emotion: {
            icon: "üòÆ‚Äçüí®",
            text: "Lucas est√° se acalmando"
          },
          choices: [
            {
              text: "Lucas pode ir entregar o presente para Mateus",
              nextPage: 3
            },
            {
              text: "Lucas pode ficar desenhando em seu caderninho que trouxe",
              nextPage: 5
            }
          ]
        },
        {
          text: "Lucas entrega o presente para Mateus, que fica muito feliz. 'Obrigado por vir √† minha festa, Lucas!' diz Mateus com um grande sorriso.",
          image: "birthday_3a.jpg",
          imageAlt: "Lucas entregando um presente para Mateus, que sorri",
          emotion: {
            icon: "üôÇ",
            text: "Lucas est√° se sentindo melhor"
          },
          choices: [
            {
              text: "Lucas pode perguntar a Mateus sobre os jogos da festa",
              nextPage: 6
            },
            {
              text: "Lucas pode dizer 'De nada' e voltar para um lugar mais quieto",
              nextPage: 5
            }
          ]
        },
        {
          text: "Depois de um tempo, Lucas se sente mais confort√°vel. Ele v√™ algumas crian√ßas jogando um jogo de tabuleiro em uma mesa afastada da m√∫sica.",
          image: "birthday_3b.jpg",
          imageAlt: "Crian√ßas jogando um jogo de tabuleiro em uma mesa afastada",
          emotion: {
            icon: "ü§î",
            text: "Lucas est√° interessado no jogo"
          },
          choices: [
            {
              text: "Lucas pode se aproximar e observar o jogo",
              nextPage: 7
            },
            {
              text: "Lucas pode procurar Mateus para entregar o presente",
              nextPage: 3
            }
          ]
        },
        {
          text: "Lucas fica desenhando em seu caderninho. Uma menina chamada Sofia se aproxima e diz: 'Uau, voc√™ desenha muito bem! Posso ver?'",
          image: "birthday_3c.jpg",
          imageAlt: "Sofia olhando para o desenho de Lucas",
          emotion: {
            icon: "üòä",
            text: "Lucas est√° surpreso e contente"
          },
          choices: [
            {
              text: "Lucas pode mostrar seus desenhos para Sofia",
              nextPage: 8
            },
            {
              text: "Lucas pode agradecer e continuar desenhando sozinho",
              nextPage: 7
            }
          ]
        },
        {
          text: "Mateus mostra a Lucas os jogos da festa. H√° uma ca√ßa ao tesouro que est√° prestes a come√ßar, e Mateus convida Lucas para ser seu parceiro.",
          image: "birthday_4a.jpg",
          imageAlt: "Mateus explicando a ca√ßa ao tesouro para Lucas",
          emotion: {
            icon: "üòÉ",
            text: "Lucas est√° animado"
          },
          ending: {
            text: "Lucas participou da ca√ßa ao tesouro com Mateus e eles encontraram muitos tesouros juntos! Lucas aprendeu que mesmo quando uma situa√ß√£o parece dif√≠cil no in√≠cio, pode se tornar divertida quando damos uma chance.",
            positive: true
          }
        },
        {
          text: "Lucas se aproxima da mesa de jogos. Um menino olha para ele e diz: 'Quer jogar com a gente? Estamos precisando de mais um jogador!'",
          image: "birthday_4b.jpg",
          imageAlt: "Crian√ßas convidando Lucas para jogar",
          emotion: {
            icon: "üòÑ",
            text: "Lucas est√° feliz pelo convite"
          },
          ending: {
            text: "Lucas se juntou ao jogo e se divertiu muito! Ele descobriu que encontrar uma atividade mais calma em uma festa agitada pode ser uma √≥tima maneira de se divertir e fazer novos amigos.",
            positive: true
          }
        },
        {
          text: "Lucas mostra seus desenhos para Sofia. Ela fica impressionada e conta que tamb√©m adora desenhar. Eles come√ßam a desenhar juntos.",
          image: "birthday_4c.jpg",
          imageAlt: "Lucas e Sofia desenhando juntos",
          emotion: {
            icon: "üòÑ",
            text: "Lucas est√° feliz por compartilhar seu interesse"
          },
          ending: {
            text: "Lucas e Sofia passaram a festa desenhando e conversando sobre seus personagens favoritos. Lucas aprendeu que compartilhar seus interesses pode ser uma √≥tima maneira de fazer amizades, mesmo em situa√ß√µes desafiadoras.",
            positive: true
          }
        }
      ]
    }
  }
};

// Elementos do DOM
const elements = {
  // Telas
  storySelection: document.getElementById('story-selection'),
  storyScreen: document.getElementById('story-screen'),
  storyCompletion: document.getElementById('story-completion'),
  
  // Bot√µes de navega√ß√£o
  backButton: document.getElementById('back-button'),
  backToStories: document.getElementById('back-to-stories'),
  
  // Bot√µes de hist√≥ria
  storyButtons: document.querySelectorAll('.story-button'),
  
  // Elementos da hist√≥ria
  storyTitle: document.getElementById('story-title'),
  progressFill: document.getElementById('progress-fill'),
  currentPage: document.getElementById('current-page'),
  totalPages: document.getElementById('total-pages'),
  sceneImage: document.getElementById('scene-image'),
  sceneText: document.getElementById('scene-text'),
  characterEmotion: document.getElementById('character-emotion'),
  storyChoices: document.getElementById('story-choices'),
  storyHintButton: document.getElementById('story-hint-button'),
  storyContinueButton: document.getElementById('story-continue-button'),
  
  // Elementos da tela de conclus√£o
  completionSummary: document.getElementById('completion-summary'),
  restartStoryButton: document.getElementById('restart-story-button'),
  differentEndingButton: document.getElementById('different-ending-button'),
  backToStoriesButton: document.getElementById('back-to-stories-button'),
  
  // Controle de som
  soundToggle: document.getElementById('sound-toggle'),
  
  // Sons
  successSound: document.getElementById('success-sound'),
  errorSound: document.getElementById('error-sound'),
  hintSound: document.getElementById('hint-sound'),
  completionSound: document.getElementById('completion-sound'),
  clickSound: document.getElementById('click-sound'),
  pageTurnSound: document.getElementById('page-turn-sound')
};

// Inicializa√ß√£o
document.addEventListener('DOMContentLoaded', () => {
  // Configurar eventos dos bot√µes de navega√ß√£o
  elements.backButton.addEventListener('click', goToMainMenu);
  elements.backToStories.addEventListener('click', showStorySelection);
  
  // Configurar eventos dos bot√µes de hist√≥ria
  elements.storyButtons.forEach(button => {
    button.addEventListener('click', () => {
      const story = button.dataset.story;
      if (story) {
        selectStory(story);
      }
    });
    
    // Adicionar navega√ß√£o por teclado
    button.addEventListener('keydown', (e) => {
      if (e.key === 'Enter' || e.key === ' ') {
        e.preventDefault();
        button.click();
      }
    });
  });
  
  // Configurar eventos da tela de hist√≥ria
  elements.storyHintButton.addEventListener('click', showStoryHint);
  elements.storyContinueButton.addEventListener('click', continueStory);
  
  // Configurar eventos da tela de conclus√£o
  elements.restartStoryButton.addEventListener('click', restartStory);
  elements.differentEndingButton.addEventListener('click', tryDifferentEnding);
  elements.backToStoriesButton.addEventListener('click', showStorySelection);
  
  // Configurar controle de som
  if (window.gameUtils) {
    // Usar configura√ß√£o global de som
    storyConfig.soundEnabled = window.gameUtils.soundEnabled;
  } else {
    // Configurar controle de som local
    elements.soundToggle.addEventListener('click', toggleSound);
  }
  
  // Mostrar tela inicial
  showStorySelection();
  
  // Anunciar para leitores de tela
  announceToScreenReader('Hist√≥ria Interativa carregada. Escolha uma hist√≥ria para come√ßar.');
});

/**
 * Navega para o menu principal
 */
function goToMainMenu() {
  window.location.href = '../index.html';
}

/**
 * Mostra a tela de sele√ß√£o de hist√≥ria
 */
function showStorySelection() {
  // Ocultar todas as telas
  elements.storySelection.classList.remove('hidden');
  elements.storyScreen.classList.add('hidden');
  elements.storyCompletion.classList.add('hidden');
  
  // Anunciar para leitores de tela
  announceToScreenReader('Escolha uma hist√≥ria para come√ßar.');
}

/**
 * Seleciona uma hist√≥ria
 * @param {string} story - Nome da hist√≥ria
 */
function selectStory(story) {
  // Verificar se a hist√≥ria existe
  if (!storyConfig.stories[story]) {
    console.error(`Hist√≥ria ${story} n√£o encontrada`);
    return;
  }
  
  // Atualizar hist√≥ria atual
  storyConfig.currentStory = story;
  
  // Reiniciar estado
  storyConfig.currentPage = 0;
  storyConfig.chosenPath = [];
  storyConfig.currentChoice = null;
  
  // Iniciar hist√≥ria
  startStory();
  
  // Anunciar para leitores de tela
  announceToScreenReader(`Hist√≥ria ${storyConfig.stories[story].title} selecionada. A hist√≥ria vai come√ßar.`);
}

/**
 * Inicia a hist√≥ria selecionada
 */
function startStory() {
  // Ocultar todas as telas
  elements.storySelection.classList.add('hidden');
  elements.storyScreen.classList.remove('hidden');
  elements.storyCompletion.classList.add('hidden');
  
  // Obter dados da hist√≥ria
  const storyData = storyConfig.stories[storyConfig.currentStory];
  
  // Atualizar t√≠tulo
  elements.storyTitle.textContent = storyData.title;
  
  // Atualizar total de p√°ginas
  elements.totalPages.textContent = storyData.totalPages;
  
  // Mostrar primeira p√°gina
  showStoryPage(0);
}

/**
 * Mostra uma p√°gina da hist√≥ria
 * @param {number} pageIndex - √çndice da p√°gina
 */
function showStoryPage(pageIndex) {
  // Obter dados da hist√≥ria
  const storyData = storyConfig.stories[storyConfig.currentStory];
  
  // Verificar se a p√°gina existe
  if (!storyData.pages[pageIndex]) {
    console.error(`P√°gina ${pageIndex} n√£o encontrada na hist√≥ria ${storyConfig.currentStory}`);
    return;
  }
  
  // Atualizar p√°gina atual
  storyConfig.currentPage = pageIndex;
  
  // Obter dados da p√°gina
  const page = storyData.pages[pageIndex];
  
  // Atualizar texto
  elements.sceneText.textContent = page.text;
  elements.sceneText.classList.add('fade-in');
  
  // Atualizar imagem
  // Na implementa√ß√£o real, usar√≠amos imagens reais
  // Por enquanto, usamos emojis como placeholder
  const imagePlaceholder = getImagePlaceholder(storyConfig.currentStory, pageIndex);
  elements.sceneImage.textContent = imagePlaceholder;
  elements.sceneImage.style.backgroundImage = `none`;
  elements.sceneImage.setAttribute('aria-label', page.imageAlt || 'Imagem da hist√≥ria');
  
  // Atualizar emo√ß√£o do personagem
  if (page.emotion) {
    elements.characterEmotion.classList.remove('hidden');
    const emotionIcon = elements.characterEmotion.querySelector('.emotion-icon');
    const emotionText = elements.characterEmotion.querySelector('.emotion-text');
    
    emotionIcon.textContent = page.emotion.icon;
    emotionText.textContent = page.emotion.text;
  } else {
    elements.characterEmotion.classList.add('hidden');
  }
  
  // Atualizar progresso
  const progress = ((pageIndex + 1) / storyData.totalPages) * 100;
  elements.progressFill.style.width = `${progress}%`;
  elements.currentPage.textContent = pageIndex + 1;
  
  // Limpar escolhas anteriores
  elements.storyChoices.innerHTML = '';
  
  // Verificar se √© uma p√°gina final
  if (page.ending) {
    // Mostrar bot√£o de continuar
    elements.storyContinueButton.classList.remove('hidden');
    
    // Ocultar bot√£o de dica
    elements.storyHintButton.classList.add('hidden');
  } else if (page.choices && page.choices.length > 0) {
    // Criar bot√µes de escolha
    page.choices.forEach((choice, index) => {
      const choiceButton = document.createElement('button');
      choiceButton.className = 'story-choice';
      choiceButton.textContent = choice.text;
      choiceButton.setAttribute('data-choice', index);
      choiceButton.setAttribute('aria-label', `Escolha: ${choice.text}`);
      
      // Adicionar evento de clique
      choiceButton.addEventListener('click', () => {
        selectChoice(index);
      });
      
      // Adicionar navega√ß√£o por teclado
      choiceButton.addEventListener('keydown', (e) => {
        if (e.key === 'Enter' || e.key === ' ') {
          e.preventDefault();
          choiceButton.click();
        }
      });
      
      // Adicionar ao container
      elements.storyChoices.appendChild(choiceButton);
    });
    
    // Mostrar bot√£o de dica
    elements.storyHintButton.classList.remove('hidden');
    
    // Ocultar bot√£o de continuar
    elements.storyContinueButton.classList.add('hidden');
  }
  
  // Reproduzir som de virar p√°gina
  playSound(elements.pageTurnSound);
  
  // Anunciar para leitores de tela
  announceToScreenReader(`P√°gina ${pageIndex + 1} de ${storyData.totalPages}. ${page.text}`);
  
  // Se houver emo√ß√£o, anunciar ap√≥s um pequeno delay
  if (page.emotion) {
    setTimeout(() => {
      announceToScreenReader(`${page.emotion.text}`);
    }, 2000);
  }
}

/**
 * Seleciona uma escolha
 * @param {number} choiceIndex - √çndice da escolha
 */
function selectChoice(choiceIndex) {
  // Obter dados da p√°gina atual
  const storyData = storyConfig.stories[storyConfig.currentStory];
  const page = storyData.pages[storyConfig.currentPage];
  
  // Verificar se a escolha existe
  if (!page.choices || !page.choices[choiceIndex]) {
    console.error(`Escolha ${choiceIndex} n√£o encontrada na p√°gina ${storyConfig.currentPage}`);
    return;
  }
  
  // Atualizar escolha atual
  storyConfig.currentChoice = choiceIndex;
  
  // Destacar escolha selecionada
  const choiceButtons = elements.storyChoices.querySelectorAll('.story-choice');
  choiceButtons.forEach((button, index) => {
    if (index === choiceIndex) {
      button.classList.add('selected');
    } else {
      button.classList.remove('selected');
      button.disabled = true;
    }
  });
  
  // Adicionar escolha ao caminho
  storyConfig.chosenPath.push({
    page: storyConfig.currentPage,
    choice: choiceIndex
  });
  
  // Reproduzir som de clique
  playSound(elements.clickSound);
  
  // Mostrar pr√≥xima p√°gina ap√≥s um pequeno delay
  setTimeout(() => {
    const nextPage = page.choices[choiceIndex].nextPage;
    showStoryPage(nextPage);
  }, 1000);
  
  // Anunciar para leitores de tela
  announceToScreenReader(`Voc√™ escolheu: ${page.choices[choiceIndex].text}`);
}

/**
 * Continua a hist√≥ria ap√≥s uma p√°gina final
 */
function continueStory() {
  // Obter dados da p√°gina atual
  const storyData = storyConfig.stories[storyConfig.currentStory];
  const page = storyData.pages[storyConfig.currentPage];
  
  // Verificar se √© uma p√°gina final
  if (page.ending) {
    // Mostrar tela de conclus√£o
    showCompletionScreen(page.ending);
  }
}

/**
 * Mostra a tela de conclus√£o
 * @param {Object} ending - Dados do final da hist√≥ria
 */
function showCompletionScreen(ending) {
  // Ocultar todas as telas
  elements.storySelection.classList.add('hidden');
  elements.storyScreen.classList.add('hidden');
  elements.storyCompletion.classList.remove('hidden');
  
  // Atualizar resumo
  elements.completionSummary.textContent = ending.text;
  
  // Verificar se h√° caminhos alternativos
  const hasAlternativeEndings = checkForAlternativeEndings();
  
  // Atualizar bot√£o de final diferente
  if (hasAlternativeEndings) {
    elements.differentEndingButton.disabled = false;
  } else {
    elements.differentEndingButton.disabled = true;
  }
  
  // Reproduzir som de conclus√£o
  playSound(elements.completionSound);
  
  // Anunciar para leitores de tela
  announceToScreenReader(`Parab√©ns! Voc√™ completou a hist√≥ria. ${ending.text}`);
}

/**
 * Verifica se h√° finais alternativos dispon√≠veis
 * @returns {boolean} - Verdadeiro se houver finais alternativos
 */
function checkForAlternativeEndings() {
  // Obter dados da hist√≥ria
  const storyData = storyConfig.stories[storyConfig.currentStory];
  
  // Contar quantas p√°ginas t√™m finais
  let endingsCount = 0;
  storyData.pages.forEach(page => {
    if (page.ending) {
      endingsCount++;
    }
  });
  
  // Verificar se h√° mais de um final
  return endingsCount > 1;
}

/**
 * Reinicia a hist√≥ria atual
 */
function restartStory() {
  // Reiniciar estado
  storyConfig.currentPage = 0;
  storyConfig.chosenPath = [];
  storyConfig.currentChoice = null;
  
  // Iniciar hist√≥ria
  startStory();
  
  // Anunciar para leitores de tela
  announceToScreenReader('Hist√≥ria reiniciada.');
}

/**
 * Tenta um final diferente
 */
function tryDifferentEnding() {
  // Verificar se h√° um caminho escolhido
  if (storyConfig.chosenPath.length === 0) {
    restartStory();
    return;
  }
  
  // Obter √∫ltima bifurca√ß√£o
  const lastChoice = storyConfig.chosenPath[storyConfig.chosenPath.length - 1];
  
  // Remover √∫ltima escolha
  storyConfig.chosenPath.pop();
  
  // Voltar para a p√°gina da √∫ltima escolha
  showStoryPage(lastChoice.page);
  
  // Anunciar para leitores de tela
  announceToScreenReader('Voltando para tentar um caminho diferente.');
}

/**
 * Mostra uma dica para a p√°gina atual
 */
function showStoryHint() {
  // Obter dados da p√°gina atual
  const storyData = storyConfig.stories[storyConfig.currentStory];
  const page = storyData.pages[storyConfig.currentPage];
  
  // Verificar se h√° emo√ß√£o na p√°gina
  if (page.emotion) {
    // Destacar emo√ß√£o
    const emotionContainer = elements.characterEmotion;
    emotionContainer.classList.add('pulse');
    
    // Remover destaque ap√≥s um tempo
    setTimeout(() => {
      emotionContainer.classList.remove('pulse');
    }, 1000);
    
    // Reproduzir som de dica
    playSound(elements.hintSound);
    
    // Anunciar para leitores de tela
    let hintText = '';
    
    // Gerar dica baseada na emo√ß√£o
    switch (page.emotion.icon) {
      case 'üòü':
      case 'üò®':
      case 'üò¢':
      case 'üò≥':
        hintText = 'O personagem est√° se sentindo desconfort√°vel. Talvez escolher algo que o ajude a se sentir mais seguro seja uma boa ideia.';
        break;
      case 'üòä':
      case 'üôÇ':
      case 'üòå':
        hintText = 'O personagem est√° se sentindo bem. Talvez escolher algo que mantenha essa sensa√ß√£o positiva seja uma boa ideia.';
        break;
      case 'üòÑ':
      case 'üòÉ':
      case 'ü§©':
        hintText = 'O personagem est√° muito feliz! Talvez escolher algo que continue essa divers√£o seja uma boa ideia.';
        break;
      case 'ü§î':
      case 'üòÆ‚Äçüí®':
      case 'üò≤':
        hintText = 'O personagem est√° pensativo ou curioso. Talvez escolher algo que explore essa curiosidade seja uma boa ideia.';
        break;
      default:
        hintText = 'Observe como o personagem est√° se sentindo e pense em como suas escolhas podem afetar essas emo√ß√µes.';
    }
    
    announceToScreenReader(`Dica: ${hintText}`);
  } else {
    // Se n√£o houver emo√ß√£o, dar uma dica gen√©rica
    announceToScreenReader('Dica: Pense em como voc√™ se sentiria nessa situa√ß√£o e o que seria melhor fazer.');
  }
}

/**
 * Ativa ou desativa os sons do jogo
 */
function toggleSound() {
  // Alternar estado de som
  storyConfig.soundEnabled = !storyConfig.soundEnabled;
  
  // Atualizar √≠cone e classe
  if (storyConfig.soundEnabled) {
    elements.soundToggle.classList.remove('sound-off');
    elements.soundToggle.classList.add('sound-on');
    elements.soundToggle.querySelector('.sound-icon').textContent = 'üîä';
    elements.soundToggle.setAttribute('aria-label', 'Desativar sons');
  } else {
    elements.soundToggle.classList.remove('sound-on');
    elements.soundToggle.classList.add('sound-off');
    elements.soundToggle.querySelector('.sound-icon').textContent = 'üîà';
    elements.soundToggle.setAttribute('aria-label', 'Ativar sons');
  }
  
  // Anunciar para leitores de tela
  const message = storyConfig.soundEnabled ? 'Sons ativados' : 'Sons desativados';
  announceToScreenReader(message);
}

/**
 * Reproduz um som se os sons estiverem ativados
 * @param {HTMLAudioElement} audioElement - Elemento de √°udio
 */
function playSound(audioElement) {
  // Verificar se os sons est√£o ativados
  if (!storyConfig.soundEnabled) {
    return;
  }
  
  // Usar a fun√ß√£o utilit√°ria do script principal se dispon√≠vel
  if (window.gameUtils && window.gameUtils.playSound) {
    window.gameUtils.playSound(audioElement, storyConfig.soundEnabled);
  } else {
    // Implementa√ß√£o de fallback
    try {
      // Reiniciar o som para garantir que ele toque
      if (audioElement.currentTime) {
        audioElement.currentTime = 0;
      }
      
      // Tentar reproduzir o som
      const playPromise = audioElement.play();
      
      // Tratar erros de reprodu√ß√£o (comum em dispositivos m√≥veis)
      if (playPromise !== undefined) {
        playPromise.catch(error => {
          console.log('Erro ao reproduzir som:', error);
        });
      }
    } catch (error) {
      console.log('Erro ao reproduzir som:', error);
    }
  }
}

/**
 * Anuncia uma mensagem para leitores de tela
 * @param {string} message - Mensagem a ser anunciada
 */
function announceToScreenReader(message) {
  // Usar a fun√ß√£o utilit√°ria do script principal se dispon√≠vel
  if (window.gameUtils && window.gameUtils.announceToScreenReader) {
    window.gameUtils.announceToScreenReader(message);
  } else {
    // Implementa√ß√£o de fallback
    let announcer = document.getElementById('screen-reader-announcer');
    
    if (!announcer) {
      announcer = document.createElement('div');
      announcer.id = 'screen-reader-announcer';
      announcer.className = 'visually-hidden';
      announcer.setAttribute('aria-live', 'polite');
      document.body.appendChild(announcer);
    }
    
    // Limpar o anunciador e adicionar a nova mensagem
    announcer.textContent = '';
    
    // Usar setTimeout para garantir que a mudan√ßa seja anunciada
    setTimeout(() => {
      announcer.textContent = message;
    }, 50);
  }
}

/**
 * Obt√©m um placeholder para a imagem da hist√≥ria
 * @param {string} story - Nome da hist√≥ria
 * @param {number} pageIndex - √çndice da p√°gina
 * @returns {string} - Emoji para usar como placeholder
 */
function getImagePlaceholder(story, pageIndex) {
  // Na implementa√ß√£o real, usar√≠amos imagens reais
  // Por enquanto, usamos emojis como placeholder
  const placeholders = {
    school: ['üè´', 'üë®‚Äçüè´', 'üë©‚Äçüë¶', 'üë¶üë¶', 'üë¶', 'üë©‚Äçüë¶', 'ü¶ñ', 'üöó', 'üë®‚Äçüè´üë¶'],
    park: ['üé¢', 'üëß', 'üëßüë¶', 'üëßüëß', 'üëß', 'üëß', 'üëß', 'üëßüëß', 'üëß'],
    birthday: ['üéÇ', 'üë¶üë®', 'üë¶', 'üë¶üë¶', 'üë¶', 'üë¶üëß', 'üë¶üë¶', 'üë¶üë¶', 'üë¶üëß']
  };
  
  // Verificar se h√° placeholders para a hist√≥ria
  if (!placeholders[story]) {
    return 'üì∑';
  }
  
  // Verificar se h√° placeholder para a p√°gina
  if (!placeholders[story][pageIndex]) {
    return 'üì∑';
  }
  
  return placeholders[story][pageIndex];
}
